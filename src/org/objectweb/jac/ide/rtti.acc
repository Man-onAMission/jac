
//
// Model elements
//

import org.objectweb.jac.ide.*;

newVirtualClass fieldName java.lang.String;

class Preferences {
    attribute externalEditor {
        setFieldType filePath;
    }
}

class Project {
    setFieldType generationPath directory;
}

class  AspectConfiguration {
    attribute configurationCode {
        setFieldType accCode;
        addDependentField name;
    }
    attribute defaultConfigurationCode {
        setFieldType accCode;
        addDependentField name;
    }
    attribute aspect {
        setNullAllowed;
    }
}

class Package {
    declareAssociation diagrams Diagram.container;
    declareAssociation classes Class.container;
    declareAssociation instances Instance.container;
    declareAssociation groups Group.container;
    declareAssociation project Project.packages;
    declareAssociation subPackages Package.parent;

    attribute classes {
        setAggregation true;
        setAdder addClass;
    }
    attribute subPackages {
        setAggregation true;
    }
    attribute project {
        setGetter getProject;
    }
}

class Class {
    declareAssociation methods Method.parent;
    declareAssociation fields Field.parent;

    setNullAllowed superClass;
    attribute fields {
        setAggregation true;
        definePrimaryKey {name};
    }
    attribute methods {
        setAggregation true;
        definePrimaryKey {prototype};
    }
    declareCalculatedField navigableRoles getNavigableRoles;
    attribute relationRoles {
        declareCalculatedField getRelationRoles;
        setComponentType RelationRole;
        setRemover removeLink;
    }
    attribute allFields {
        declareCalculatedField getAllFields;
    }
    attribute allMethods {
        declareCalculatedField getAllMethods;
        setRemover removeMethodIntf;
        setAdder addMethodIntf;
    }
    attribute allNavigableRoles {
        declareCalculatedField getAllNavigableRoles;
    }
}

class Repository {
    attribute relationRoles {
        setComponentType RelationRole;
        setRemover removeLink;
    }
}

class ModelElement {
    setFieldType description text;
    declareCalculatedField fullName getFullName;
    declareCalculatedField generationName getGenerationName;
}

class TypedElement {
    declareCalculatedField prototype getPrototype;
}

class Field {
    setNullAllowed getter;
    setNullAllowed setter;
    attribute name {
        setFieldType "fieldName";
    }
}

class Parameter {
    attribute name {
        setFieldType "fieldName";
    }
}

class RelationRole {
    declareCalculatedField roleName getRoleName;
    addDependentField generationName cardinality;
    addDependentField generationName name;
    setNullAllowed getter;
    setNullAllowed adder;
    setNullAllowed remover;
    setNullAllowed clearer;
    setNullAllowed primaryKey;
}

class Method {
    setFieldType body javaCode;
    declareCalculatedField paramStr getParametersString;
    declareCalculatedField paramNames getParameterNames;   
}

class Link {
    declareCalculatedField start getStart;
    declareCalculatedField end getEnd;
}

class Projects {
    setNullAllowed currentApplication;
}

//
// Diagram and figures
//

class GenericFigure {
    addWrittenFields translate { corner };
}

class ClassFigure {
    addWrittenFields translate { corner };
}

class LinkFigure {
    addWrittenFields translateName { nameCorner };
    addWrittenFields translateStartRole { startRoleCorner };
    addWrittenFields translateEndRole { endRoleCorner };
    addWrittenFields translateStartCardinality { startCardinalityCorner };
    addWrittenFields translateEndCardinality { endCardinalityCorner };
}

class Role {
   declareAssociation end ModelElement.endingLinks;
   declareAssociation start ModelElement.links;
}

class Application {
    defineRepository "projects#0" Projects.projects.applications;
}

declareAssociation Diagram figures Figure.diagram;
declareAssociation Application aspectConfigurations AspectConfiguration.application;
declareAssociation Application project Project.applications;
declareAssociation ModelElement configItems ConfigItem.modelElement;
declareAssociation Method parameters Parameter.method;


// CodeGeneration mixins

addMixinMethod 
    Package
    "CodeGeneration.generateCode(org.objectweb.jac.ide.Package)";

addMixinMethod 
    Class
    "CodeGeneration.generateCode(org.objectweb.jac.ide.Class)";

class Project {
    addMixinMethod "CodeGeneration.compile(org.objectweb.jac.ide.Project)";
    addMixinMethod "CodeGeneration.generateCode(org.objectweb.jac.ide.Project)";
    addMixinMethod "CodeGeneration.generateJavaCode(org.objectweb.jac.ide.Project)";
    addMixinMethod "CodeGeneration.generateAndCompile(org.objectweb.jac.ide.Project)";
    addMixinMethod "CodeGeneration.createJAR(org.objectweb.jac.ide.Project)";
}

class Projects {
    addMixinMethod "CodeGeneration.generateCode(org.objectweb.jac.ide.Projects)";
    addMixinMethod "CodeGeneration.compile(org.objectweb.jac.ide.Projects)";
    addMixinMethod "CodeGeneration.generateAndCompile(org.objectweb.jac.ide.Projects)";
}

class AspectConfiguration {
    addMixinMethod "CodeGeneration.generateCode(org.objectweb.jac.ide.AspectConfiguration)";
    addMixinMethod "CodeGeneration.generateAndReload(org.objectweb.jac.ide.AspectConfiguration)";
}

class org.objectweb.jac.lib.Attachment {
    addMixinMethod "Gui.edit";
    addMixinMethod "Gui.editWith";
    setDynamicFieldType data Gui.getType;
}

// Tell emacs to use java-mode when editing
// Local Variables:
// mode: java
// End:
