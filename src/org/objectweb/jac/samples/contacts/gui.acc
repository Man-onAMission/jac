// Define some resources
defineResource ICON icon_contact "org/objectweb/jac/aspects/gui/resources/small_person.gif";
defineResource ICON icon_company "org/objectweb/jac/aspects/gui/resources/cdiagram.gif";
defineResource ICON icon_crep "org/objectweb/jac/aspects/gui/resources/Animp.gif";

// Say wich classes can be called interactively
askForParameters "org.objectweb.jac.samples.contacts.*";

// FilteredContacts
class org.objectweb.jac.samples.contacts.ContactRepository {
    setIcon icon_crep;
    setAutoCreateAll;
}

// FilteredContacts
class org.objectweb.jac.samples.contacts.FilteredContacts {
    setAttributesOrder {contacts};

    attribute contacts {
        setTableView;
        //setViewOnSelection;
        //setPreferredHeight 500;
        //      setCollectionSortCriteria {company};
    }
    setAutoCreateAll;
    setParameterNames "search(java.lang.String,org.objectweb.jac.samples.contacts.Company)" {
        "An expression to search in the existing contacts (e.g. '[A-C].*')",
            "A company"
            };
    setMethodsOrder {showAll,search,companies};
    setOpenViewMethod companies;

}

// Person
class org.objectweb.jac.samples.contacts.Person {
    setToString "%firstName% %lastName%";
    setIcon icon_contact;
    //   setAutoCreateState {company};
    setAttributesOrder {
        firstName, lastName, phone, email, company,
            position, lastContact, contactAgain, notes, mailing
            };
    setParameterNames "Person(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" {
        "Last name", "First name", "Phone", "Email"
            };
    setTableMembersOrder { lastName, firstName, company };
   
    setCategories { "General", "Dates", "Misc" };
   
    attribute firstName,lastName,phone,email,company,position,mailing {   
        setCategory "General";
        setEmbeddedEditor;
    }
   
    attribute lastContact,contactAgain {   
        setCategory "Dates";
        setEmbeddedEditor;
    }

    attribute notes {
        setBorder LEFT LINE;
        setEditorHeight 5em;
        setCategory "Misc";
        setEmbeddedEditor;
    }

    attribute actions {
        setTableView;
        setAutoCreate;
        setViewOnSelection;
        setCategory "Dates";
    }
}

// Action
class org.objectweb.jac.samples.contacts.Action {
	setParameterNames "Action(java.lang.String,java.util.Date)" { "Description", "Date" };
	setEmbeddedEditor description;
	setEmbeddedEditor date;
}

// CompanyRepository
class org.objectweb.jac.samples.contacts.CompanyRepository {
    setAttributesOrder {companies};
    attribute companies {
        setTableView;
        //setPreferredHeight 500;
    }
    //setAutoCreate contacts;
    setAutoCreateAll;
}

// Company
class org.objectweb.jac.samples.contacts.Company {
    setToString "%name%";
    //setIcon icon_company;
    setAttributesOrder {
        name, address, phone, fax, webSiteURL, notes
            };
    setParameterNames "Company(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)" {
        "Name", "Address", "Phone", "Fax", "Web site"
            };
    setTableMembersOrder { name, address, phone };
    setEmbeddedEditor name;
    setEmbeddedEditor address;
    setEmbeddedEditor phone;
    setEmbeddedEditor fax;
    setEmbeddedEditor webSiteURL;

    attribute notes {
        setEmbeddedEditor;
        setBorder LEFT LINE;
    }
}

// The GUI main window configuration
block contacts-gui {
    registerCustomized;
    setTitle "JAC Sample: contacts";

    setSubPanesGeometry 2 HORIZONTAL {false,false};
    //setSubPanesGeometry 1 HORIZONTAL {false};
    setPaneContent "0" Object { "default", "filteredcontacts#0" };
    addReferenceToPane org.objectweb.jac.samples.contacts.FilteredContacts contacts "1";
    setNavBar org.objectweb.jac.samples.contacts.FilteredContacts contacts;
    addReferenceToPane org.objectweb.jac.samples.contacts.ContactRepository contacts "1";
    setNavBar org.objectweb.jac.samples.contacts.ContactRepository contacts;
    setPosition 0 0 80 80;
    setSplitterLocation 0 0.6;
}

// Tell emacs to use java-mode when editing
// Local Variables:
// mode: java
// End:
